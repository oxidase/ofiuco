bazel_dep(name = "rules_python", version = "0.32.2")

python_version = "3_12"

python_full_version = "3.12.2"

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(python_version = python_version.replace("_", "."))
use_repo(
    python,
    "python_" + python_version,
)

bazel_dep(name = "rules_poetry", version = "0.0.0")
local_path_override(
    module_name = "rules_poetry",
    path = "../..",
)

poetry = use_extension("@rules_poetry//python:extensions.bzl", "poetry")
poetry.parse(
    name = "poetry",
    lock = "//:poetry.lock",
    platforms = {
        python_version + "_x86_64-unknown-linux-gnu": "{" + ",".join(
            [
                '"python_full_version": "{}"'.format(python_full_version),
                '"os_name": "posix"',
                '"platform_machine": "x86_64"',
                '"platform_system": "Linux"',
                '"platform_tags": ["manylinux_2_17_x86_64"]',
                '"sys_platform": "linux"',
            ],
        ) + "}",
        python_version + "_x86_64-apple-darwin": "{" + ",".join(
            [
                '"python_full_version": "{}"'.format(python_full_version),
                '"os_name": "posix"',
                '"platform_machine": "x86_64"',
                '"platform_system": "Darwin"',
                '"platform_tags": ["macosx_10_15_x86_64"]',
                '"sys_platform": "darwin"',
            ],
        ) + "}",
        python_version + "_aarch64-apple-darwin": "{" + ",".join(
            [
                '"python_full_version": "{}"'.format(python_full_version),
                '"os_name": "posix"',
                '"platform_machine": "arm64"',
                '"platform_system": "Darwin"',
                '"platform_tags": []',
                '"sys_platform": "darwin"',
            ],
        ) + "}",
    },
)
use_repo(poetry, "poetry")
